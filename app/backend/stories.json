[
  {
    "id": 0,
    "title": "What is an Epidemic?",
    "requires": [],
    "slides": [
      {
        "text": "When someone is infected by a new disease, it is kind of like gossip in school.",
        "image": "gossip.png"
      },
      {
        "text": "When one of your friends tells a story about someone in your school to your friend group, you and your friends start telling the story to other people - but not everyone you meet.",
        "image": "gossip_not_listening.png"
      },
      {
        "text": "Some people hear the story and pass it on, and others don't. But if enough people keep sharing it, soon almost the whole school knows.",
        "image": "whole_school.png"
      },
      {
        "text": "If we try to keep track of how the gossip spreads, we can't always take each conversation each person had into consideration. Instead, we can do something similar to rolling the dice for each person.",
        "image": "dice.jpg"
      },
      {
        "text": "To see how many people someone tells the gossip to, we can pretend to roll a 4-sided dice for each person - the number it lands on shows how many people they tell. You can see an example for this below. If you click Re-Generate, you can see how re-rolling the dice for each person changes the outcome!",
        "data": {
          "type": "dummy_tree",
          "num_iter": 5
        },
        "vis1": {
          "type": "rad_tree",
          "depth": 4,
          "step": 50,
          "show_re_generate": true
        }
      },
      {
        "text": "Now you can also try changing the slider around to see how the gossip spreads day-by-day. Each ring represents a new day.",
        "data": {
          "type": "dummy_tree",
          "num_iter": 5
        },
        "vis1": {
          "type": "rad_tree",
          "depth": 0,
          "step": 50,
          "show_re_generate": true
        },
        "sliders": [
          {
            "type": "depth",
            "min": 0,
            "max": 5,
            "step": 1,
            "current_value": 0,
            "symbol": "sun",
            "text": "days"
          }
        ]
      },
      {
        "text": "A disease spreads the same way, one person might only infect a few other people, but when they also start infecting other people, the disease starts spreading faster and faster! That is how an epidemic starts.",
        "data": {
          "type": "dummy_tree",
          "num_iter": 5
        },
        "vis1": {
          "type": "rad_tree",
          "depth": 5,
          "step": 50,
          "show_re_generate": true
        },
        "sliders": [
          {
            "type": "depth",
            "min": 0,
            "max": 5,
            "step": 1,
            "current_value": 5,
            "symbol": "sun",
            "text": "days"
          }
        ]
      }
    ],
    "progress": 7
  },
  {
    "id": 1,
    "title": "Motivation for Epidemic Visualization",
    "requires": [
      0
    ],
    "slides": [
      {
        "text": "When a disease spreads, thousands of numbers are recorded every day: infections, recoveries, hospitalizations. Without tools for showing and summarizing all this data, it can become very hard to keep track of what is happening as you can also see in the example table below.",
        "image": "sir_table.png"
      },
      {
        "text": "Our goal in epidemic visualization is to create representations of the data that are easier to understand and read. You can see an example for this below, both representations contain the same information but the second one is much less mental effort to read. (Don't worry, you don't need to understand what is happening in the image for now.)",
        "image": "table_to_plot.png"
      },
      {
        "text": "Other than increasing our understanding of the data, visualizations can also help raise awareness of people about their impact on others and how an epidemic evolves.",
        "image": "vis_mot.png"
      },
      {
        "text": "An example for creating awareness is something like this, where you can trace, how one person infecting a few people can lead to many other people getting infected.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "rad_tree",
          "show_id": false,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "In the stories of this level, you will see explanations for how you can understand some of these visualizations, create them and what they are used for.",
        "data": {
          "type": "dummy_tree"
        },
        "vis1": {
          "type": "rad_tree",
          "show_id": false,
          "step": 30,
          "depth": 6
        },
        "vis2": {
          "type": "line_plot",
          "show_re_generate": true
        }
      }
    ],
    "progress": 5
  },
  {
    "id": 2,
    "title": "Line Plots",
    "requires": [
      0,
      1
    ],
    "slides": [
      {
        "text": "Line plots are one of the most common ways to show the relation between two things. Like infections over time.",
        "data": {
          "type": "dummy_tree",
          "num_iter": 7
        },
        "vis1": {
          "type": "line_plot",
          "x_lab": "days",
          "y_lab": "people"
        }
      },
      {
        "text": "Or you could also think of how the temperature changes during a day hour by hour.",
        "vis1": {
          "type": "line_plot",
          "temps": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "show_dots": true
        }
      },
      {
        "text": "The two related things in this case are the hours of the day and the temperatures measured.",
        "image": "time_temp_rel.png"
      },
      {
        "text": "We can represent each on a scale like this. These scales are essentially just some lines with marks and numbers.",
        "image": "x_scale.png"
      },
      {
        "text": "The number at the first mark is the smallest number we plan to include in our scale, in this case, this is 0. Numbers after this one show the distance between two marks.",
        "image": "x_scale_zero.png"
      },
      {
        "text": "To calculate the distance between two marks, you can take two numbers at different marks, subtract the smaller from the larger one and and divide this by the number of marks between the two numbers. You can see how to do this again below.",
        "image": "step_size.png"
      },
      {
        "text": "Let's say that this scale represents the hours in a day. The first mark is at 0, and the last is at 23. The distance between each marking is 2. Now we can add some hours as dots. If we want to add hours 0, 5, 12, and 23, we can use the numbers at the marks and the distance between them, to find their place.",
        "vis1": {
          "type": "line_plot",
          "demo_num": true,
          "only_show_x": true,
          "x_lab": "hours",
          "show_dots": true,
          "draw_line": false
        }
      },
      {
        "text": "Now that we have our scale for the hours, we can add an other one like this for the temperatures. It works just like the other one, you just need to count upwards instead of counting to the right.",
        "vis1": {
          "type": "line_plot",
          "temps": true,
          "draw_line": false,
          "show_dots": false,
          "y_lab": "temperature",
          "x_lab": "hours"
        }
      },
      {
        "text": "Now that we have two scales, we also need two values so that we can add a dot. Let's say that the temperature at 12 o'clock was 20 degrees. To add a dot for this, we can count to 5 on the time scale and 10 on the temperature scale. Now, if we draw a line from both scales, we get the place of our new dot. This dot means that the temperature at 5 o'clock was 10 degrees.",
        "image": "temp_at_time.png"
      },
      {
        "text": "Here are some more examples for you to see how this works. The red dot means that at 2 o'clock, the temperature was 2 degrees. The yellow dot means that at 7 o'clock, the temperature was 10 degrees. The blue dot means that at 14 o'clock, the temperature was 5 degrees.",
        "image": "colored_points.png"
      },
      {
        "text": "Now that we understan how it is done, we can add a dot for the temperature at each hour in a day. If you use your mouse to hover over a dot, you can see how it was drawn and what it means. A line plot is drawn, by connecting the dots using lines like the ones connecting the dots here, but it is usually drawn without the dots.",
        "vis1": {
          "type": "line_plot",
          "temps": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "show_dots": true
        }
      },
      {
        "text": "This is how the line plot from the previous slide looks like without drawing the dots. While it is a bit harder to read the exact temperatures at the exact times like this, only drawing the line makes it easier to compare multiple different lines in the same plot as you will see in the lecture about multi-line plots.",
        "vis1": {
          "type": "line_plot",
          "temps": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "show_dots": false
        }
      }
    ],
    "progress": 1
  },
  {
    "id": 3,
    "title": "Infection Trees",
    "requires": [
      0,
      1
    ],
    "slides": [
      {
        "text": "An important task when inspecting the spreading of a disease is to track who infected whom.",
        "image": "infection.png"
      },
      {
        "text": "For a simple example, let's go back to our gossip analogy. Let's say that there's a friend group of 5 people: Alexa, Bobby, Tom, Leila, and Max. Max heard some new gossip from a person outside of their friend group and told it to Leila. Leila told it to Bobby and Tom and Tom told it to Alexa. The table below summarizes the interactions.",
        "image": "infection_table.png"
      },
      {
        "text": "To make it easier to imagine, we can draw each person of the friend group as a node and draw arrows between the people who told each other about the gossip. Each arrow points from the person who told the gossip to the person who it was told to.",
        "image": "small_graph.png"
      },
      {
        "text": "In mathematics, this representation is called a directed graph. A graph is a representation containing links and nodes, this graph in our case is called directional, because the links are arrows with a specific direction from a node to an other.",
        "image": "nodes_and_links.png"
      },
      {
        "text": "Directional graphs give a much better overview than a table containing the interactions, but if we add more people, it is still easy to loose track. For example, it would be difficult to say, who started the gossip in this group on a glance.",
        "image": "larger_graph.png"
      },
      {
        "text": "Apart from being directed, our graph also has an other important property which makes it interesting. It also doesn't contain any loops. Loops in directed graphs are a series of links where the last link points to the same node as where the first link starts from. You can see loop examples in red below.",
        "image": "loop_examples.png"
      },
      {
        "text": "Graphs without loops are called trees. This is because they have a single node called the root node to which no link points to. If we reorder the graph a bit like below, we can see that it sort of resembles an upside down tree with the root node being at the top.",
        "image": "larger_graph_to_tree.png"
      },
      {
        "text": "This is the same tree as on the previous page, just drawn a bit differently. Here, we can see that Frank started spreading the gossip and it is also easy to track, who told the gossip to whom and how many people the gossip needed to get through to get from a person to an other.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "We can measure the distance between two people in the graph by counting the number of links between them. Here are some examples: The distance between Frank and himself is 0 because there are 0 links. The distance between Sophie and Flora is 2 because there are are 2 links between them and the distanve between Frank and Flora is 3.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "Using the distance between nodes, we can calculate the depth of the tree graph which is the distance between the root node (Frank in this case) and the most distant node from the root node (Tom in this case). The depth of this graph is 4. We can also characterise nodes with the same distance from the root node as nodes of a certain depth. For example, Sophie and Melinda are at the same depth = 1.",
        "image": "tree_depth.png"
      },
      {
        "text": "Now that you understand, how we calculate the depth of a graph, you can try playing around with the depth that you would like to display from the graph. This can be useful for only displaying infromation that we actually need like if we're intrested in the number of people Frank infected directly, we can set the depth to 1.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        },
        "sliders": [
          {
            "type": "depth",
            "min": 0,
            "max": 4,
            "step": 1,
            "current_value": 4,
            "symbol": "water",
            "text": "depth"
          }
        ]
      },
      {
        "text": "Here you can try generating different trees and adjusting their depth.",
        "data": {
          "type": "dummy_tree",
          "num_iter": 4
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6,
          "show_re_generate": true
        },
        "sliders": [
          {
            "type": "depth",
            "min": 0,
            "max": 4,
            "step": 1,
            "current_value": 4,
            "symbol": "water",
            "text": "depth"
          }
        ]
      }
    ],
    "progress": 12
  },
  {
    "id": 4,
    "title": "Motivation for Epidemic Modelling",
    "requires": [
      0,
      1
    ],
    "slides": [
      {
        "text": "Modelling epidemics allows us to not only visualize how a disease has been spreading in the past but to also estimate what will happen in the future.",
        "image": "model_example.png"
      },
      {
        "text": "This is particularly useful for hospitals in estimating how many beds they need to keep free.",
        "image": "hospital_bed.png"
      },
      {
        "text": "Or for doctors to be able to tell us if we need to wear masks while shopping or avoid malls entirely.",
        "image": "mask.png"
      },
      {
        "text": "In the stories at this level, we will learn how some of the models that estimate disease spread work.",
        "image": "SIR.png"
      }
    ],
    "progress": 4
  },
  {
    "id": 5,
    "title": "SIR",
    "requires": [
      0,
      1,
      2,
      4,
      8
    ],
    "slides": [
      {
        "text": "The SIR model is one of the simplest ones for modelling an epidemic.",
        "image": "SIR.png"
      },
      {
        "text": "SIR is a compartmental model, meaning that it divides people into different compartments. You can imagine compartments as boxes and people as beads.",
        "image": "SIR_box.png"
      },
      {
        "text": "The total number of beads is the number of people we would like to model. The total number of people in our simulation is also called the 'population size'.",
        "image": "beads.png"
      },
      {
        "text": "The compartments in the SIR model are S: Susceptible, I: Infectious, R: Recovered, this is where the model gets its name from. People in S can get infected by the disease but are not infected yet, people in I are infected, they are spreading the disease and people in R were infected once, but are recovered now, they usually can't get infected by the same disease again.",
        "image": "SIR_expl.png"
      },
      {
        "text": "For a simple example, we can model gossip in school. We only need the S and I compartmetns for this because people can only know and not know about the gossip but can't recover from knowing it.",
        "image": "SI.png"
      },
      {
        "text": "Let's say that there is one person who starts spreading the gossip. That one person goes into the I compartment and everyone else goes into the S compartment. For this simple example, there is a total of 12 people in our simulation, so we place 11 beads in the S compartment.",
        "image": "SI_gossip.png"
      },
      {
        "text": "After initially placing the beads in the compartments, we can start moving them from one compartment to the other. How we move the beads depends on the transmission rate.",
        "image": "SI_transmission.png"
      },
      {
        "text": "The transmission rate describes the chance of a person who knows about the gossip telling it to people who don't allready know about it. How many beads we move from S to I depends on the number of people in S, the number of people in I and the transmission rate. With a transmission rate of 1, we can say that for the first few days, we move one bead from S to I for each bead in I like in the image below. After a few days, we only need to move less beads, because the chance of a person knowing about the gossip meeting a person who does not allready know decreases.",
        "image": "SI_transmission=1.png"
      },
      {
        "text": "Sometimes we need to model a lot of people, but when we add a lot more beads to our boxes, it becomes very difficult to count them. Instead, we can use line plots to show how many people there are in a compartment each day like in the plot below. Here, the orange dashed line shows the number of people who know about the gossip on a given day, and the blue continuous line shows the number of people who don't allready know.",
        "data": {
          "type": "sir",
          "transmission_rate": 1,
          "recovery_rate": 0,
          "discrete": true,
          "pop_size": 12,
          "n_inf": 1,
          "n_days": 8
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5,
          "line_labels": [
            "S",
            "I"
          ]
        }
      },
      {
        "text": "How many days we display in our plot depends our simulation settings and is a choice we can make and adjust. Try playing arond with the number of days displayed using the slider to find a visualization that is the most informative in your opinion!",
        "data": {
          "type": "sir",
          "transmission_rate": 1,
          "recovery_rate": 0,
          "discrete": true,
          "pop_size": 12,
          "n_inf": 1,
          "n_days": 4
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5
        },
        "sliders": [
          {
            "type": "n_days",
            "min": 2,
            "max": 10,
            "step": 1,
            "current_value": 4,
            "symbol": "sun",
            "text": "days"
          }
        ]
      },
      {
        "text": "As we mentioned it before, the transmission rate describes the rate at which the gossip spreads, you can try changing it around to see how it affects the spreading of the gossip using the second slider! After some experimentation, you will see that with a higher transmission rate, the gossip needs less days to spread to everyone.",
        "data": {
          "type": "sir",
          "transmission_rate": 1,
          "recovery_rate": 0,
          "discrete": false,
          "pop_size": 12,
          "n_inf": 1,
          "n_days": 8
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5
        },
        "sliders": [
          {
            "type": "n_days",
            "min": 2,
            "max": 10,
            "step": 1,
            "current_value": 8,
            "symbol": "sun",
            "text": "days"
          },
          {
            "type": "transmission_rate",
            "min": 0.1,
            "max": 3,
            "step": 0.1,
            "current_value": 0.5,
            "symbol": "virus",
            "text": "transmission rate"
          }
        ]
      },
      {
        "text": "Now that we have seen how S and I relate to each other, we can also add the R compartment. Similarly to how people move from S to I, people can also move from I to R.",
        "image": "SIR.png"
      },
      {
        "text": "To know how many people move from I to R, we need to know how many days it takes a person on average to recover from the disease.",
        "image": "hospital_bed.png"
      },
      {
        "text": "The rate describing the movement of people from the I compartment to the R compartment is called the recovery rate which can be calculated by dividing 1 by the number of days it takes a person on average to recover from the disease. The number of beads we move from I to R depends on the recovery rate and the number of people in the I compartment.",
        "image": "IR_base.png"
      },
      {
        "text": "Here, we have 8 infected people in the beginning, if we assume that the average person takes 2 days to recover, we get a recovery rate of 0.5. We get the number of people we need to move from I to R for each day by multiplying the number of people in I by the recovery rate.",
        "image": "IR_rec=0.5.png"
      },
      {
        "text": "To see the transitions between the three compartments, we can take a new example where we have a school with 200 people. In this school, a person got infected by a new disease. People infected by this disease take 7 days to recover and infect 1 person a day on average before recovering. For now, we assume that infected people keep going to school.",
        "data": {
          "type": "sir",
          "transmission_rate": 1,
          "recovery_rate": 0.2,
          "discrete": false,
          "pop_size": 12,
          "n_inf": 1,
          "n_days": 20
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5,
          "line_labels": [
            "S",
            "I",
            "R"
          ]
        },
        "sliders": [
          {
            "type": "n_days",
            "min": 2,
            "max": 50,
            "step": 1,
            "current_value": 20,
            "symbol": "sun",
            "text": "days"
          },
          {
            "type": "transmission_rate",
            "min": 0.1,
            "max": 3,
            "step": 0.1,
            "current_value": 1,
            "symbol": "virus",
            "text": "transmission rate"
          },
          {
            "type": "recovery_rate",
            "min": 0,
            "max": 1,
            "step": 0.05,
            "current_value": 0.2,
            "symbol": "bed",
            "text": "recovery rate"
          }
        ]
      },
      {
        "text": "The SIR model is very effective, meaning that we can use it to model a population of almost any size without it taking much time. You can try running the simulation on different population sizes using the new slider we just added!",
        "data": {
          "type": "sir",
          "transmission_rate": 1,
          "recovery_rate": 0.2,
          "discrete": false,
          "pop_size": 12,
          "n_inf": 1,
          "n_days": 20
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5,
          "line_labels": [
            "S",
            "I",
            "R"
          ]
        },
        "sliders": [
          {
            "type": "n_days",
            "min": 2,
            "max": 50,
            "step": 1,
            "current_value": 20,
            "symbol": "sun",
            "text": "days"
          },
          {
            "type": "transmission_rate",
            "min": 0.1,
            "max": 3,
            "step": 0.1,
            "current_value": 1,
            "symbol": "virus",
            "text": "transmission rate"
          },
          {
            "type": "recovery_rate",
            "min": 0,
            "max": 1,
            "step": 0.05,
            "current_value": 0.2,
            "symbol": "bed",
            "text": "recovery rate"
          },
          {
            "type": "pop_size",
            "min": 10,
            "max": 100000,
            "step": 100,
            "current_value": 1000,
            "symbol": "person",
            "text": "population size"
          }
        ]
      }
    ],
    "progress": 17
  },
  {
    "id": 6,
    "title": "Radial Trees",
    "requires": [
      0,
      1,
      3
    ],
    "slides": [
      {
        "text": "Like we saw in the infection tree lecture, graphs can be reordered to improve our overview of the connections. In the infection tree lecture, we saw a classic representation of tree graphs that you can see once again below.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "Tree graphs don't necessarily need to be drawn from top to bottom, an other useful way to draw them is going from the center outwards. This new way of drawing a tree is called the radial tree which can be seen in the second image.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        },
        "vis2": {
          "type": "rad_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "In radial trees, nodes with the same depth are not drawn in the same line like in classic infection trees but instead in the same circle concentric to the middle node. You can see each depth circle drawn with a grey dashed line, and how this representation resembles an onion.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "rad_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      }
    ],
    "progress": 3
  },
  {
    "id": 7,
    "title": "Agent-Based Models",
    "requires": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      8
    ],
    "slides": [
      {
        "text": "As we saw in the SIR story, the SIR model is a simple and effective tool for modelling, how a disease could spread in a population of about any size.",
        "data": {
          "type": "sir",
          "recovery_rate": 0.125,
          "n_days": 35,
          "pop_size": 20000
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people"
        }
      },
      {
        "text": "The SIR model works by pretending that everyone in a group is the same, just like how the beads all looked the same in our analogy. It assumes that everyone can get sick just as easily and gets better at the same speed. This makes it good for quickly guessing what might happen to big groups of people. But sometimes, we need a different model to be more exact for special situations.",
        "image": "beads.png"
      },
      {
        "text": "This is where agent-based models are very useful. Agent-based models handle each member of the population as an individual called an 'agent', with its own unique properties and social networks.",
        "image": "Agent.png"
      },
      {
        "text": "To understand the benefits of agent based models, we can go back to our gossip analogy. Let's say that we have a group of 6 people: Emily, Lukas, Max, Lila, Henry, and Isabelle.",
        "image": "Friends.png"
      },
      {
        "text": "In this group, we draw lines between the people who talk with eachother on a regular basis, creating a graph.",
        "image": "Friends_connections.png"
      },
      {
        "text": "We also note who likes to talk about gossip and who does not. This will become important once we start to simulate how gossip spreads between these people.",
        "image": "Friends_conn_gos.png"
      },
      {
        "text": "Now let's say that Emily starts to spread some new gossip. We mark her in a new color so that we know that she knows about the gossip.",
        "image": "Friends_conn_gos_1.png"
      },
      {
        "text": "Emily talks to Lukas and Max regularly, and they all love to gossip, so they also start spreading it. Isabelle also likes to gossip, so Max tells her about it as well. However, Lila does not, so even though she's connected to two people who know about it, Lila does not get marked. Since Henry only talks to Lila from the group, and Lila does not talk about gossip, Henry will not get to know about the gossip within this group, even though he likes to gossip.",
        "image": "Friends_conn_gos_2.png"
      },
      {
        "text": "This little example demonstrates some important features of the agent-based epidemic modelling approach. It shows how social networks can influence the spread of gossip and how handling each person separately allows us to consider personal details, such as whether a person likes to gossip or not. In contrast, if we had used the SIR model, every person would have gotten marked after a while, since SIR does not consider social networks and personal preferences by default.",
        "image": "Friends_conn_gos_2.png"
      }
    ],
    "progress": 9
  },
  {
    "id": 8,
    "title": "Multi-Line Plots",
    "requires": [
      0,
      1,
      2
    ],
    "slides": [
      {
        "text": "Here, you can see the temperatures of two consecutive days in the same plot. For this, we drew each plot the same way we discussed in the line plot lecture, and colored them using different colors and dashing to differentiate them easier. You can observe, how not drawing the dots creates a 'less messy' plot where no details of one line are hidden by the other.",
        "vis1": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "show_dots": true
        },
        "vis2": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "show_dots": false
        }
      },
      {
        "text": "We draw each line differently so that there is still a way for people to easily differentiate the two lines if they can't differentiate the colors.",
        "vis1": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "show_dots": false,
          "black_lines": false
        },
        "vis2": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "show_dots": false,
          "black_lines": true
        }
      },
      {
        "text": "The legend of a plot describes what each line in the plot represents. The legend usually contains short line sections with the same dashing and color as those contained in the plot next to a text describing them. In this case we have a line for the temperatures on day 1 and a line for the temperatures on day 2, which you can also see in the legend added to the plot.",
        "vis1": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "show_dots": false,
          "black_lines": false,
          "line_labels": [
            "day 1",
            "day 2"
          ]
        }
      },
      {
        "text": "When drawing multiple lines in the same plot, it is important that the lines we draw are on a similar scale. You can see an example below where this is not the case. In this plot, the orange dashed line has the same values as the blue continuous line multiplied by 10. You can see that in this case, changes in the blue continuous line are much harder to see.",
        "vis1": {
          "type": "multiline_plot",
          "temps_magn": true,
          "y_lab": "temperature",
          "x_lab": "hours",
          "line_labels": [
            "A",
            "Ax10"
          ]
        }
      },
      {
        "text": "You can add as many lines to line plots as you like, but you need to keep in mind that with each added line, it can become harder to understand the plot. We will see different uses of line plots in epidemic modelling, like how we drew the graph below in following chapters.",
        "data": {
          "type": "sir",
          "pop_size": 1000,
          "recovery_rate": 0.25,
          "n_days": 30,
          "discrete": false
        },
        "vis1": {
          "type": "multiline_plot",
          "y_lab": "People",
          "x_lab": "days"
        }
      }
    ],
    "progress": 5
  }
]