[
  {
    "id": 0,
    "title": "What is an Epidemic?",
    "chapter": 0,
    "requires": [],
    "slides": [
      {
        "text": "When someone is **infected** by a new **disease**, it is similar to **gossip** in school.",
        "image": "gossip.png"
      },
      {
        "text": "When one of your friends tells a story about someone in your school to your friend group, you and your friends **start telling the story to other people, but not everyone you meet**.",
        "image": "gossip_not_listening.png"
      },
      {
        "text": "Some people **hear the story and pass it on, and others don't**.\nBut if **enough people keep sharing it, soon almost the whole school knows**.",
        "image": "whole_school.png"
      },
      {
        "text": "If we try to **keep track** of how the **gossip spreads**, we can't always take each conversation each person had into consideration.\nInstead, we can do something similar to **flipping a coin**.",
        "image": "coin_flip.png"
      },
      {
        "text": "Whenever two people meet, they either **talk about gossip or they don't**.\nWe can model this by **flipping a coin**: if it lands **heads**, the **gossip spreads** from one person to the other, if it lands **tails**, **it doesn't**.",
        "image": "gossip_no_gossip.png"
      },
      {
        "text": "This example examines how **gossip spreads within a class**. There are **30 classmates**.\nLet's say each **person** has **one conversation a day**.\nOn the **first day**, only **one person knows the gossip**.\nFor **each conversation** someone has who knows about the gossip, we **flip a coin to see if the gossip spreads**.",
        "data": {
          "type": "coin_flip_gossip"
        },
        "vis1": {
          "type": "rad_tree",
          "depth": 10
        }
      },
      {
        "text": "Now you can also try **changing the slider** around to see how the **gossip spreads conversation-by-conversation**.\nEach **connection** represents a **conversation** in which the **gossip spread**.\nEach **ring** represents the **number of conversations** that were needed for the gossip to spread **from the first person** starting the gossip **to the other person**.",
        "data": {
          "type": "coin_flip_gossip"
        },
        "vis1": {
          "show_desc": false,
          "type": "rad_tree",
          "depth": 0,
          "step": 50,
          "show_re_generate": true
        },
        "sliders": [
          {
            "type": "depth",
            "min": 0,
            "max": 7,
            "step": 1,
            "current_value": 0,
            "symbol": "conversation",
            "text": "conversations"
          }
        ]
      },
      {
        "text": "**Diseases spread** very **similarly**, **one person** might only **infect a few other people**, but when **they also start infecting other people**, the **disease starts spreading faster and faster**!\nThat is how an **epidemic** starts.",
        "data": {
          "type": "coin_flip_gossip",
          "pop_size": 100
        },
        "vis1": {
          "type": "rad_tree",
          "show_desc": false,
          "depth": 5,
          "step": 50,
          "show_re_generate": true
        },
        "sliders": [
          {
            "type": "depth",
            "min": 0,
            "max": 7,
            "step": 1,
            "current_value": 5,
            "symbol": "virus",
            "text": "infections"
          }
        ]
      },
      {
        "text": "Based on the **coin-flipping analogy**, if we know that a person has an **equal chance** of **spreading or not spreading** the gossip, we can predict that **about half of the people will spread it** and the other half won't.\nHere, you can experiment with how throwing a coin a lot of times usually brings the ratio of heads and tails closer and closer.",
        "data": {
          "type": "coin_flip",
          "n_flips": 10000
        },
        "vis1": {
          "type": "multiline_plot",
          "show_re_generate": true,
          "x_max_fixed": 1000,
          "y_max_fixed": 550,
          "line_labels": [
            "Heads",
            "Tails"
          ]
        }
      },
      {
        "text": "Many epidemic modelling methods are based on this principle, where they **don't consider each person on an individual level, but rather look at the overall probabilities across the whole group**.",
        "image": "scientist_confident.png"
      }
    ],
    "progress": 0
  },
  {
    "id": 1,
    "title": "Motivation for Epidemic Visualization",
    "chapter": 0,
    "requires": [
      0
    ],
    "slides": [
      {
        "text": "When a disease spreads, thousands of numbers are recorded every day: infections, recoveries, hospitalizations.\nWithout tools for showing and summarizing all this data, it can become very hard to keep track of what is happening.",
        "image": "data_chaos.png"
      },
      {
        "text": "In the table below, you can see an example of typical data an epidemiologist would look at.\nIt contains information about how the state of a thousand people changes in ten days.",
        "image": "sir_table.png"
      },
      {
        "text": "People in the **S** column are considered **healthy** but **can get infected** by the disease that is analyzed.\nIn this column, the **S** stands for **Susceptible**",
        "image": "sir_table_s.png"
      },
      {
        "text": "People in the **I** column are **infected**, they spread the disease to other people.\nIn this column, the **I** stands for **Infected**",
        "image": "sir_table_i.png"
      },
      {
        "text": "People in the **R** column **recovered** from the disease, so they are healthy, but they differ from people in S because they cannot get infected by the same disease again.\nIn this column, the **R** stands for **Recovered**",
        "image": "sir_table_r.png"
      },
      {
        "text": "Even though we now have a basic understanding of what information this table contains, it can be hard to make judgments just by looking at it.",
        "image": "sir_table_sir.png"
      },
      {
        "text": "Our goal in **epidemic visualization** is to **create representations** of the **data** that are **easier to understand and read**.\nYou can see an example of this below, both representations contain the same information, but the second one takes much less mental effort to understand once you learn how to read it in the upcoming lectures.",
        "image": "table_to_plot.png"
      },
      {
        "text": "Other than increasing our **understanding of the data**, visualizations can also help **raise awareness** of people about their **impact on others** and how an **epidemic evolves**.",
        "image": "vis_mot.png"
      },
      {
        "text": "An example of **creating awareness** is something like this, where you can trace how one **person infecting a few people** can **lead to many other people getting infected**.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "rad_tree",
          "show_desc": false,
          "show_id": false,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "In the stories of this level, you will see explanations for how you can understand some of these visualizations, create them and what they are used for.\nYou can try hovering over the second visualization to see how it corresponds to the first visualization.",
        "data": {
          "type": "coin_flip_gossip",
          "pop_size": 30,
          "conversation_per_person": 1
        },
        "vis1": {
          "type": "rad_tree",
          "show_desc": false,
          "show_id": false,
          "step": 30,
          "depth": 7
        },
        "vis2": {
          "type": "line_plot",
          "show_re_generate": true,
          "show_desc": false,
          "x_lab": "days",
          "y_lab": "people",
          "legend": "people infected",
          "x_max_fixed": 7,
          "y_max_fixed": 30
        }
      }
    ],
    "progress": 0
  },
  {
    "id": 2,
    "title": "Line Plots",
    "chapter": 0,
    "requires": [
      0,
      1
    ],
    "slides": [
      {
        "text": "**Line plots** are one of the most common ways to show the **relation between two things**. Like infections over time.",
        "data": {
          "type": "dummy_tree",
          "num_iter": 7
        },
        "vis1": {
          "type": "line_plot",
          "x_lab": "days",
          "y_lab": "people",
          "legend": "people infected"
        }
      },
      {
        "text": "Or you could also think of how the **temperature changes** during a day **hour by hour**.",
        "vis1": {
          "type": "line_plot",
          "temps": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "show_dots": true
        }
      },
      {
        "text": "The two **related** things in this case are the **hours of the day** and the **temperatures** measured.",
        "image": "time_temp_rel.png"
      },
      {
        "text": "We can represent each on a **scale** like this.\nThese **scales** are essentially just some **lines with marks and numbers**.",
        "image": "x_scale.png"
      },
      {
        "text": "The number at the **first mark** is the **smallest number we plan to include** in our scale, in this case, this is **0**.\n**Numbers** after this one show the **distance between two marks**.",
        "image": "x_scale_zero.png"
      },
      {
        "text": "To calculate the **distance between two marks**, you can take **two numbers** at **different marks**, **subtract** the **smaller from the larger** one and **divide** this **by** the **number of marks between the two numbers**.\nYou can see how to do this again below.",
        "image": "step_size.png"
      },
      {
        "text": "Let's say that this **scale** represents the **hours in a day**. The **first mark** is at **0**, and the **last** is at **23**.\nThe **distance** between each **marking** is **2**.\nNow we can add some **hours as dots**. If we want to **add hours 0, 5, 12**, and **23**, we can use the **numbers at the marks** and the **distance between them**, to **find their place**.",
        "vis1": {
          "type": "line_plot",
          "demo_num": true,
          "only_show_x": true,
          "x_lab": "hours",
          "show_dots": true,
          "draw_line": false
        }
      },
      {
        "text": "Now that we have our scale for the hours, we can add **another** one like this for the **temperatures**. It works just like the other one, you just need to **count upwards** instead of counting to the right.",
        "vis1": {
          "type": "line_plot",
          "temps": true,
          "draw_line": false,
          "show_dots": false,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours"
        }
      },
      {
        "text": "Now that we have **two scales**, we also need **two values** so that we can **add a dot**. Let's say that the **temperature at 12 o'clock** was **20\u00b0C**.\nTo add a dot for this, we can count to **5 on the time scale** and **10 on the temperature scale**. Now, if we **draw a line from both scales**, we get the **place of our new dot**.\nThis dot means that the temperature at **12 o'clock was 20\u00b0C**.",
        "image": "temp_at_time.png"
      },
      {
        "text": "Here are some more examples for you to see how this works.\nThe **red dot** means that at **2 o'clock**, the **temperature** was **2\u00b0C**. The **yellow dot** means that at **7 o'clock**, the **temperature** was **10\u00b0C**. The **blue dot** means that at **14 o'clock**, the **temperature** was **5\u00b0C**.",
        "image": "colored_points.png"
      },
      {
        "text": "Now that we understand how it is done, we can add a dot for the **temperature at each hour in a day**. If you use your **mouse** to **hover over a dot**, you can see how it was drawn and what it means. A **line plot** is drawn, by **connecting the dots using lines** like the ones connecting the dots here, but the **dots are usually removed** after they are connected.",
        "vis1": {
          "type": "line_plot",
          "temps": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "show_dots": true
        }
      },
      {
        "text": "This is how the **line plot** from the previous slide looks like **without drawing the dots**.\nWhile it is a bit harder to read the exact temperatures at the exact times this way, **not including the dots** in our plot **makes it easier to compare multiple different lines** in the same plot as you will see in the lecture about **multi-line plots**.",
        "vis1": {
          "type": "line_plot",
          "temps": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "show_dots": false
        }
      }
    ],
    "progress": 0
  },
  {
    "id": 3,
    "title": "Infection Trees",
    "chapter": 0,
    "requires": [
      0,
      1
    ],
    "slides": [
      {
        "text": "An important task when inspecting the spreading of a disease is to track **who infected whom**.",
        "image": "infection.png"
      },
      {
        "text": "For a simple example, let's go back to our **gossip analogy**.\nLet's say that there's a **friend group of 5 people: Alexa, Bobby, Tom, Leila,** and **Max**.\n**Max** heard some new gossip from a person outside of their friend group and told it to **Leila**.\n**Leila** told it to **Bobby** and **Tom** and **Tom** told it to **Alexa**.\nThe table below summarizes the interactions.",
        "image": "infection_table.png"
      },
      {
        "text": "To make it easier to imagine, we can draw each **person** of the friend group as a **node** and draw **arrow between the people who told each other about the gossip**.\nEach arrow points from the person who told the gossip to the person who it was told to.",
        "image": "small_graph.png"
      },
      {
        "text": "In mathematics, this representation is called a **directed graph**.\nA **graph** is a representation containing **links** and **nodes**, this graph in our case is called **directional**, because the **links** are **arrows** with a **specific direction from a node to another**.",
        "image": "nodes_and_links.png"
      },
      {
        "text": "**Directional graphs** give a much better overview than a table containing the interactions, but if we add more people, it is still easy to lose track.\nFor example, it would be difficult to say, who started the gossip in this group at a glance.",
        "image": "larger_graph.png"
      },
      {
        "text": "Apart from being directed, our graph also has another important property which makes it interesting.\nIt also **doesn't contain any loops**. **Loops** in **directed graphs** are a **series of links where the last link points to the same node as where the first link starts from**.\nYou can see loop examples in red below.",
        "image": "loop_examples.png"
      },
      {
        "text": "**Graphs without loops** are called **trees**. This is because they have a **single node** called the **root node** to which **no link points to**.\nIf we reorder the graph a bit like below, we can see that it sort of resembles an upside down tree with the **root** node being at the top being the '**root**' of the tree.",
        "image": "larger_graph_to_tree.png"
      },
      {
        "text": "This is the same tree as on the previous page, just drawn a bit differently.\nHere, we can see that Frank started spreading the gossip and it is also easy to track, who told the gossip to whom and how many people the gossip needed to get through to get from a person to another.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "We can measure the **distance** between two people in the graph by counting the **number of links** between them.\nHere are some examples: The distance between Frank and himself is 0 because there are 0 links.\nThe distance between Sophie and Flora is 2 because there are 2 links between them and the distance between Frank and Flora is 3.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "Using the distance between nodes, we can calculate the **depth** of the tree graph which is the **distance** between the **root node** (Frank in this case) and the **most distant node** from the root node (Tom in this case).\nThe **depth** of this **graph** is **4**. We can also characterise nodes with the same distance from the root node as nodes of a certain **depth**. For example, **Sophie** and **Melinda** are at the same **depth = 1**.",
        "image": "tree_depth.png"
      },
      {
        "text": "Now that you understand, how we calculate the **depth** of a **graph**, you can try playing around with the **depth** that you would like to display from the graph.\nThis can be useful for only displaying information that we actually need like if we're interested in the number of people Frank infected directly, we can set the depth to 1.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        },
        "sliders": [
          {
            "type": "depth",
            "min": 0,
            "max": 4,
            "step": 1,
            "current_value": 4,
            "symbol": "water",
            "text": "depth"
          }
        ]
      },
      {
        "text": "Here you can try generating different **trees** and adjusting their **depth**.",
        "data": {
          "type": "dummy_tree",
          "num_iter": 4
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6,
          "show_re_generate": true
        },
        "sliders": [
          {
            "type": "depth",
            "min": 0,
            "max": 4,
            "step": 1,
            "current_value": 4,
            "symbol": "water",
            "text": "depth"
          }
        ]
      }
    ],
    "progress": 0
  },
  {
    "id": 4,
    "title": "Motivation for Epidemic Modelling",
    "chapter": 1,
    "requires": [
      0,
      1
    ],
    "slides": [
      {
        "text": "**Modelling epidemics** allows us to not only visualize how a disease has been spreading in the past but to also **estimate what will happen in the future**.",
        "image": "model_example.png"
      },
      {
        "text": "This is particularly useful for hospitals in **estimating how many beds they need to keep free**.",
        "image": "hospital_bed.png"
      },
      {
        "text": "Or for doctors to be able to tell us **if we need to wear masks while shopping or avoid malls entirely**.",
        "image": "mask.png"
      },
      {
        "text": "In the stories at this level, we will learn how some of the **models** that **estimate disease spread** work.",
        "image": "SIR.png"
      }
    ],
    "progress": 0
  },
  {
    "id": 5,
    "title": "Intro to SIR",
    "chapter": 1,
    "requires": [
      0,
      1,
      2,
      4,
      8
    ],
    "slides": [
      {
        "text": "The **SIR** model is one of the simplest ones for **modelling** an **epidemic**.",
        "image": "SIR.png"
      },
      {
        "text": "**SIR** is a **compartmental** model, meaning that it divides people into different compartments.\nYou can imagine **compartments** as **boxes** and **people** as **beads**.",
        "image": "SIR_box.png"
      },
      {
        "text": "The **total number of beads** is the **number of people** we would like to **model**.\nIn epidemiological modeling, the **total number of people considered in a simulation** is called the **population size**.",
        "image": "beads.png"
      },
      {
        "text": "The **compartments** in the **SIR** model are **S: Susceptible**, **I: Infectious**, **R: Recovered** or **Removed**, the **SIR** model gets its name from these abbreviations.\nWe will reference **R** as **Recovered** in the future, but you may also find resources where it is called **Removed**.\nThis hints at the fact that, in more complex models, people can also move into this compartment without actually recovering from the disease (for example, through vaccination).",
        "image": "SIR_expl.png"
      },
      {
        "text": "People in **S can get infected by the disease** but are **not infected yet**.\nPeople in **I are infected and/or contagious** meaning that they can spread the disease.\nFinally, people in **R don't spread the disease** and **can't get infected** either because they **recovered** from the disease or are immune to the disease for some other reason.",
        "image": "SIR_expl.png"
      },
      {
        "text": "For a simple example, we can model **gossip** in school.\nWe only need the **S** and **I** compartments for this because people can only know and not know about the gossip but can't recover from knowing it.",
        "image": "SI.png"
      },
      {
        "text": "Let's say that there is **one person** who **starts spreading** the gossip.\nThat one person goes into the **I** compartment and everyone else goes into the **S** compartment.\nFor this simple example, there is a **total of 12 people** in our simulation, so we place **11 beads in the S compartment**, and **1 bead in the I compartment.**",
        "image": "SI_gossip_red.png"
      },
      {
        "text": "**We color each bead the same color as its compartment**.\nAs we start moving them in future examples, beads will **keep their original color on the day they are moved**, so that it is easier to see which beads were moved.",
        "image": "SI_gossip.png"
      },
      {
        "text": "After initially placing the beads in the compartments, we can start moving them from one compartment to the other.\nHow we **move the beads from S to I** depends on the **transmission rate**.",
        "image": "SI_transmission.png"
      },
      {
        "text": "The **transmission rate** describes the **chance of a person who knows about the gossip telling it to people who don't already know about it**.\nHow many beads we move **from S to I** depends on the **number of people in S**, **the number of people in I** and the **transmission rate**.\nOutside our gossip example in epidemiology, the **transmission rate** describes the **average number of people a person from the I compartment infects a day**",
        "image": "SI_transmission.png"
      },
      {
        "text": "With a **transmission rate of 1**, we can say that for the **first few days**, we move **one bead from S to I for each bead in I** like in the image below.\nAfter a few days, we only need to move **less beads**, because the **chance** of a person knowing about the gossip meeting a person who does not already know **decreases**.",
        "image": "SI_transmission=1.png"
      },
      {
        "text": "Sometimes we need to model a lot of people, but when we add a lot more beads to our boxes, it becomes very difficult to count them.\nInstead, we can use **line plots** to show **how many people** there are in a **compartment each day** like in the plot below.\nHere, the **orange dashed line** shows the **number of people** who know about the gossip, meaning the **number of people in the I compartment on a given day**.\n**The blue continuous line** shows the number of people who don't already know, meaning the **number of people in the S compartment on a given day**.",
        "data": {
          "type": "sir",
          "transmission_rate": 1,
          "recovery_rate": 0,
          "discrete": true,
          "pop_size": 12,
          "n_inf": 1,
          "n_days": 8
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5,
          "line_labels": [
            "S",
            "I"
          ],
          "x_max_fixed": 10,
          "y_max_fixed": 12
        }
      },
      {
        "text": "How many days we display in our plot depends on our simulation settings and is a choice we can make and adjust.\nTry playing around with the **number of days** displayed using the **slider** to find a visualization that is the most informative in your opinion!",
        "data": {
          "type": "sir",
          "transmission_rate": 1,
          "recovery_rate": 0,
          "discrete": true,
          "pop_size": 12,
          "n_inf": 1,
          "n_days": 4
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5,
          "line_labels": [
            "S",
            "I"
          ],
          "x_max_fixed": 10,
          "y_max_fixed": 12
        },
        "sliders": [
          {
            "type": "n_days",
            "min": 2,
            "max": 10,
            "step": 1,
            "current_value": 4,
            "symbol": "sun",
            "text": "days"
          }
        ]
      },
      {
        "text": "As we mentioned it before, the **transmission rate** describes the **rate at which the gossip spreads**, you can try changing it around to see how it affects the **spreading of the gossip** using the **second slider**!\nAfter some experimentation, you will see that with a **higher transmission rate**, the **gossip needs less days to spread to everyone**.",
        "data": {
          "type": "sir",
          "transmission_rate": 1,
          "recovery_rate": 0,
          "discrete": false,
          "pop_size": 12,
          "n_inf": 1,
          "n_days": 8
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5,
          "line_labels": [
            "S",
            "I"
          ],
          "x_max_fixed": 10,
          "y_max_fixed": 12
        },
        "sliders": [
          {
            "type": "n_days",
            "min": 2,
            "max": 10,
            "step": 1,
            "current_value": 8,
            "symbol": "sun",
            "text": "days"
          },
          {
            "type": "transmission_rate",
            "min": 0.1,
            "max": 3,
            "step": 0.1,
            "current_value": 0.5,
            "symbol": "virus",
            "text": "transmission rate"
          }
        ]
      },
      {
        "text": "Now that we have seen how **S** and **I** relate to each other, we can also add the **R compartment**.\nSimilarly to how people **move from S to I**, people can also **move from I to R**.",
        "image": "SIR.png"
      },
      {
        "text": "To know how many people **move from I to R**, we need to know **how many days it takes a person on average to recover from the disease**.",
        "image": "hospital_bed.png"
      },
      {
        "text": "The **rate describing the movement of people from the I compartment to the R compartment** is called the **recovery rate**.\n It can be calculated by **dividing 1 by the number of days it takes a person on average to recover from the disease**.\nThe **number of beads we move from I to R depends on the recovery rate and the number of people in the I compartment**.",
        "image": "IR_base.png"
      },
      {
        "text": "In this example, we have **8 infected people in the beginning**, if we assume that the average person takes **2 days to recover**, we get a recovery rate of **1 divided by 2 = 0.5**.\nWe get the number of people we need to **move from I to R** for each day by **multiplying the number of people in I by the recovery rate**.",
        "image": "IR_rec=0.5.png"
      },
      {
        "text": "Now that we have a basic understanding of each compartment, we can look at how we would initially **set up** a **simulation** when using the **SIR model**.\n**Before starting the simulation**, we need to set the **population size**, the **number of people that are infected** initially and the **number of people that are recovered** initially if there's any.",
        "image": "tot_pop.png"
      },
      {
        "text": "In this example, our **population size** is **15** we have **3** people that are **infected** and **2** people that are **recovered** initially.\nWe can think of the **initialization of our model** as taking the **whole box of beads, our total population** and **dividing** it in our three compartments: **S**, **I** and **R**.\nAfter placing as many beads as there are **infected people in I** and as many beads as there are **recovered people in R**, we can **place the rest of the beads in S**.\n",
        "image": "tot_pop_divided.png"
      },
      {
        "text": "To see the **transitions** between the **three compartments**, we can take a new example where we have a **school with 200 people**.\nIn this school, **one person got infected by a new disease**.\nPeople infected by this disease take **5 days to recover** and **infect 2 people a day on average** before recovering.\nFor now, we assume that **infected people keep going to school**.",
        "data": {
          "type": "sir",
          "transmission_rate": 2,
          "recovery_rate": 0.2,
          "discrete": false,
          "pop_size": 200,
          "n_inf": 1,
          "n_days": 10
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "line_labels": [
            "S",
            "I",
            "R"
          ],
          "x_max_fixed": 10,
          "y_max_fixed": 12
        }
      },
      {
        "text": "This is the **same example** as on the previous page, but now you can try **changing the transmission and recovery rates** to see how they affect the outcomes!",
        "data": {
          "type": "sir",
          "transmission_rate": 2,
          "recovery_rate": 0.2,
          "discrete": false,
          "pop_size": 200,
          "n_inf": 1,
          "n_days": 10
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "line_labels": [
            "S",
            "I",
            "R"
          ],
          "x_max_fixed": 10,
          "y_max_fixed": 12
        },
        "sliders": [
          {
            "type": "n_days",
            "min": 1,
            "max": 10,
            "step": 1,
            "current_value": 10,
            "symbol": "sun",
            "text": "days"
          },
          {
            "type": "transmission_rate",
            "min": 0.1,
            "max": 3,
            "step": 0.1,
            "current_value": 2,
            "symbol": "virus",
            "text": "transmission rate"
          },
          {
            "type": "recovery_rate",
            "min": 0,
            "max": 1,
            "step": 0.01,
            "current_value": 0.2,
            "symbol": "bed",
            "text": "recovery rate"
          }
        ]
      },
      {
        "text": "The **SIR** model is very **effective**, meaning that we can use it to **model a population of almost any size without it taking much time**.\nYou can try running the simulation on different population sizes using the new slider we just added!\nPay attention to how the scales for days and people are now set differently because of the larger population and the higher maximum number of days in the simulation.",
        "data": {
          "type": "sir",
          "transmission_rate": 2,
          "recovery_rate": 0.1,
          "discrete": false,
          "pop_size": 50000,
          "n_inf": 1,
          "n_days": 20
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "n_days": 5,
          "line_labels": [
            "S",
            "I",
            "R"
          ],
          "x_max_fixed": 30,
          "y_max_fixed": 100000
        },
        "sliders": [
          {
            "type": "n_days",
            "min": 2,
            "max": 30,
            "step": 1,
            "current_value": 20,
            "symbol": "sun",
            "text": "days"
          },
          {
            "type": "transmission_rate",
            "min": 0.1,
            "max": 3,
            "step": 0.1,
            "current_value": 2,
            "symbol": "virus",
            "text": "transmission rate"
          },
          {
            "type": "recovery_rate",
            "min": 0,
            "max": 1,
            "step": 0.05,
            "current_value": 0.1,
            "symbol": "bed",
            "text": "recovery rate"
          },
          {
            "type": "pop_size",
            "min": 10000,
            "max": 100000,
            "step": 1000,
            "current_value": 50000,
            "symbol": "person",
            "text": "population size"
          }
        ]
      }
    ],
    "progress": 0
  },
  {
    "id": 6,
    "title": "Radial Trees",
    "chapter": 0,
    "requires": [
      0,
      1,
      3
    ],
    "slides": [
      {
        "text": "As we saw in the infection tree lecture, **graphs** can be **reordered** to **improve our overview** of the connections.\nIn the infection tree lecture, we saw a classic representation of tree graphs that you can see once again below.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "Tree graphs don't necessarily need to be drawn from top to bottom, another useful way to draw them is **going from the center outwards**.\nThis new way of drawing a tree is called the **radial tree** which can be seen in the **second visualization**.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "inf_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        },
        "vis2": {
          "type": "rad_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      },
      {
        "text": "In **radial trees**, **nodes with the same depth** are not drawn in the same line like in classic infection trees but instead in the **same circle concentric to the middle node**.\nYou can see each depth circle drawn with a grey dashed line, and how this representation resembles an onion.",
        "data": {
          "type": "example_tree"
        },
        "vis1": {
          "type": "rad_tree",
          "show_id": true,
          "step": 30,
          "depth": 6
        }
      }
    ],
    "progress": 0
  },
  {
    "id": 7,
    "title": "Intro to Agent-Based Models",
    "chapter": 1,
    "requires": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      8
    ],
    "slides": [
      {
        "text": "As we saw in the SIR lesson, the **SIR model is a simple and effective tool for modelling, how a disease could spread in a population of about any size**.",
        "data": {
          "type": "sir",
          "recovery_rate": 0.125,
          "n_days": 35,
          "pop_size": 20000
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "line_labels": [
            "S",
            "I",
            "R"
          ]
        }
      },
      {
        "text": "The **SIR** model works by pretending that **everyone in a group is the same**, just like how the beads all looked the same in our analogy.\nIn our coin flip analogy from the beginning, it assumes that everyone has the same chance of getting sick and recovering at any time.\nThis makes it good for quickly guessing what might happen to big groups of people.\nBut sometimes, we need a different model to be more exact for special situations.",
        "image": "beads.png"
      },
      {
        "text": "This is where **agent-based models** are very useful. **Agent-based models handle each member of the population as an individual** called an '**agent**', with its **own unique properties and social networks**.",
        "image": "Agent.png"
      },
      {
        "text": "To understand the benefits of agent **based models**, we can go back to our **gossip analogy**. Let's say that we have a group of **6 people: Emily, Lukas, Max, Lila, Henry, and Isabelle**.",
        "image": "Friends.png"
      },
      {
        "text": "In this group, we **draw lines between the people who talk with each other on a regular basis**, creating a **graph**.",
        "image": "Friends_connections.png"
      },
      {
        "text": "We also **note who likes to talk about gossip and who does not**. This will become important once we start to **simulate how gossip spreads** between these people.\nWe marked **Lila** in a different color, since she's the only person who does **not like to gossip**.",
        "image": "Friends_conn_gos.png"
      },
      {
        "text": "Now let's say that **Emily starts to spread some new gossip**. We **mark her in a new color** so that we know that she knows about the gossip.",
        "image": "Friends_conn_gos_1.png"
      },
      {
        "text": "Emily talks to Lukas and Max regularly, and they all love to gossip, so they also start spreading it. Isabelle also likes to gossip, so Max tells her about it as well. However, **Lila does not**, so even though she's connected to two people who know about it, **Lila does not get marked**. Since **Henry only talks to Lila** from the group, and Lila does not talk about gossip, **Henry will not get to know about the gossip within this group**, even though he likes to gossip.",
        "image": "Friends_conn_gos_2.png"
      },
      {
        "text": "This little example demonstrates some important features of the agent-based epidemic modelling approach.\nIt shows how **social networks** can **influence the spread of gossip** and how **handling each person separately allows us to consider personal details**, such as whether a person likes to gossip or not.\nIn contrast, if we had used the SIR model, every person would have gotten marked after a while, since SIR does not consider social networks and personal preferences by default.",
        "image": "Friends_conn_gos_2.png"
      }
    ],
    "progress": 0
  },
  {
    "id": 8,
    "title": "Multi-Line Plots",
    "chapter": 0,
    "requires": [
      0,
      1,
      2
    ],
    "slides": [
      {
        "text": "Here, you can see the **temperatures** per **hour** of **two consecutive days** in the same plot.\nFor this, we drew each plot the same way we discussed in the line plot lecture, and colored them using different colors and dashing to differentiate them easier.\nYou can observe how not drawing the dots creates a 'less messy' plot where no details of one line are hidden by the other.",
        "vis1": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "show_dots": true,
          "line_labels": [
            "day 1",
            "day 2"
          ]
        },
        "vis2": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "show_dots": false,
          "line_labels": [
            "day 1",
            "day 2"
          ]
        }
      },
      {
        "text": "We draw each line using a different style so that there is still a way for people to easily differentiate the two lines if they can't differentiate the colors.",
        "vis1": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "show_dots": false,
          "black_lines": false,
          "line_labels": [
            "day 1",
            "day 2"
          ]
        },
        "vis2": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "show_dots": false,
          "black_lines": true,
          "line_labels": [
            "day 1",
            "day 2"
          ]
        }
      },
      {
        "text": "The **legend** of a plot describes what each **line** in the plot **represents**.\nThe **legend** usually contains short line sections with the same dashing and color as those contained in the plot next to the text describing them.\nIn this case we have a line for the **temperatures** on **day 1** and a line for the **temperatures** on **day 2**, which you can also see in the **legend** added to the plot.",
        "vis1": {
          "type": "multiline_plot",
          "temps": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "show_dots": false,
          "black_lines": false,
          "line_labels": [
            "day 1",
            "day 2"
          ]
        }
      },
      {
        "text": "When drawing multiple lines in the same plot, it is important that the lines we draw are on a **similar scale**.\nYou can see an example below where this is **not** the case.\nIn this plot, the orange dashed line has the same values as the blue continuous line multiplied by 10. You can see that in this case, changes in the blue continuous line are much harder to see.",
        "vis1": {
          "type": "multiline_plot",
          "temps_magn": true,
          "y_lab": "temperature (\u00b0C)",
          "x_lab": "hours",
          "line_labels": [
            "A",
            "Ax10"
          ]
        }
      },
      {
        "text": "You can add as **many** lines to line plots as you like, but you need to keep in mind that **with each added line, it can become harder to understand the plot**.\nWe will see different uses of **line plots** in **epidemic modelling**, like how we drew the graph below in following chapters.",
        "data": {
          "type": "sir",
          "pop_size": 1000,
          "recovery_rate": 0.25,
          "n_days": 30,
          "discrete": false
        },
        "vis1": {
          "type": "multiline_plot",
          "y_lab": "People",
          "x_lab": "days",
          "line_labels": [
            "S",
            "I",
            "R"
          ]
        }
      }
    ],
    "progress": 0
  },
  {
    "id": 9,
    "title": "SIR in Practice",
    "chapter": 1,
    "requires": [
      0,
      1,
      2,
      4,
      5,
      8
    ],
    "slides": [
      {
        "text": "We know from the previous **SIR** lecture how the **SIR model** works, but we haven't looked at how we can take **real-world data** and use that to **predict what could happen in the future**.",
        "data": {
          "type": "sir",
          "pop_size": 1000,
          "transmission_rate": 1,
          "recovery_rate": 0.125,
          "n_days": 30,
          "discrete": false
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "line_labels": [
            "S",
            "I",
            "R"
          ]
        }
      },
      {
        "text": "We created this plot by calculating the number of people in the **S, I, and R** compartments each day, based on **real-world COVID-19 epidemic data from Austria***.\nIn this plot, **S_AT, I_AT, and R_AT** represent the **S, I, and R** compartments in **Austria**, calculated from epidemiological data.",
        "source": "SIR values calculated based on data available here: https://github.com/GoogleCloudPlatform/covid-19-open-data/blob/main/docs/table-epidemiology.md",
        "data": {
          "type": "sir_at",
          "start_index": 500,
          "end_index": 700
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "line_labels": [
            "S_AT",
            "I_AT",
            "R_AT"
          ],
          "x_max_fixed": 650,
          "y_max_fixed": 9000000
        }
      },
      {
        "text": "We can use the SIR model to predict what could happen in the future by **adjusting the transmission rate and recovery rate**, so that the results calculated by the SIR model **match the real-world data as closely as possible**.\nIn this plot, **S_SIM, I_SIM, and R_SIM** represent the **S, I, and R compartments calculated using the SIR model**.",
        "data": {
          "type": "sir_at",
          "start_index": 500,
          "end_index": 700,
          "include_generated": true,
          "transmission_rate": 0.097,
          "recovery_rate": 0.0682
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "line_labels": [
            "S_AT",
            "I_AT",
            "R_AT",
            "S_SIM",
            "I_SIM",
            "R_SIM"
          ],
          "x_max_fixed": 650,
          "y_max_fixed": 9000000,
          "line_styles": [
            [
              "",
              "#1f77b4"
            ],
            [
              "",
              "#ff7f0e"
            ],
            [
              "",
              "#2ca02c"
            ],
            [
              "5, 5",
              "#1f77b4"
            ],
            [
              "5, 5",
              "#ff7f0e"
            ],
            [
              "5, 5",
              "#2ca02c"
            ]
          ]
        },
        "sliders": [
          {
            "type": "transmission_rate",
            "min": 0.08,
            "max": 0.11,
            "step": 0.0001,
            "current_value": 0.097,
            "symbol": "virus",
            "text": "transmission rate"
          },
          {
            "type": "recovery_rate",
            "min": 0.05,
            "max": 0.075,
            "step": 0.0001,
            "current_value": 0.0682,
            "symbol": "bed",
            "text": "recovery rate"
          }
        ]
      },
      {
        "text": "Now that we matched the transmission rate and recovery rate in the previous slide, we can let the **simulation continue**.\nThe vertical line called **AT_END** marks where our **real-world data ends but our simulation continues**.",
        "data": {
          "type": "sir_at",
          "start_index": 500,
          "end_index": 700,
          "include_generated": true,
          "transmission_rate": 0.097,
          "recovery_rate": 0.0682,
          "sim_extra_days": 200
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "vert_line": 200,
          "line_labels": [
            "S_AT",
            "I_AT",
            "R_AT",
            "S_SIM",
            "I_SIM",
            "R_SIM",
            "AT_END"
          ],
          "x_max_fixed": 650,
          "y_max_fixed": 9000000,
          "line_styles": [
            [
              "",
              "#1f77b4"
            ],
            [
              "",
              "#ff7f0e"
            ],
            [
              "",
              "#2ca02c"
            ],
            [
              "5, 5",
              "#1f77b4"
            ],
            [
              "5, 5",
              "#ff7f0e"
            ],
            [
              "5, 5",
              "#2ca02c"
            ],
            [
              "3, 3",
              "#FF746C"
            ]
          ]
        },
        "sliders": [
          {
            "type": "transmission_rate",
            "min": 0.08,
            "max": 0.11,
            "step": 0.0001,
            "current_value": 0.097,
            "symbol": "virus",
            "text": "transmission rate"
          },
          {
            "type": "recovery_rate",
            "min": 0.05,
            "max": 0.075,
            "step": 0.0001,
            "current_value": 0.0682,
            "symbol": "bed",
            "text": "recovery rate"
          }
        ]
      },
      {
        "text": "Since we used past data in our example, we can actually check, how well the SIR model estimated what actually happened.\nThe vertical line called CUT shows where we cut our data on the pervious slide.",
        "data": {
          "type": "sir_at",
          "start_index": 500,
          "end_index": 900,
          "include_generated": true,
          "transmission_rate": 0.097,
          "recovery_rate": 0.0682
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "vert_line": 200,
          "line_labels": [
            "S_AT",
            "I_AT",
            "R_AT",
            "S_SIM",
            "I_SIM",
            "R_SIM",
            "CUT"
          ],
          "x_max_fixed": 650,
          "y_max_fixed": 9000000,
          "line_styles": [
            [
              "",
              "#1f77b4"
            ],
            [
              "",
              "#ff7f0e"
            ],
            [
              "",
              "#2ca02c"
            ],
            [
              "5, 5",
              "#1f77b4"
            ],
            [
              "5, 5",
              "#ff7f0e"
            ],
            [
              "5, 5",
              "#2ca02c"
            ],
            [
              "3, 3",
              "#FF746C"
            ]
          ]
        },
        "sliders": [
          {
            "type": "transmission_rate",
            "min": 0.08,
            "max": 0.11,
            "step": 0.0001,
            "current_value": 0.097,
            "symbol": "virus",
            "text": "transmission rate"
          },
          {
            "type": "recovery_rate",
            "min": 0.05,
            "max": 0.075,
            "step": 0.0001,
            "current_value": 0.0682,
            "symbol": "bed",
            "text": "recovery rate"
          }
        ]
      },
      {
        "text": "You can see that even though the SIR model initially matches the real data well, the **S and R compartments start to differ more and more** from the real world data even though the **I compartments remain close**.",
        "data": {
          "type": "sir_at",
          "start_index": 500,
          "end_index": 900,
          "include_generated": true,
          "transmission_rate": 0.097,
          "recovery_rate": 0.0682
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "vert_line": 200,
          "line_labels": [
            "S_AT",
            "I_AT",
            "R_AT",
            "S_SIM",
            "I_SIM",
            "R_SIM",
            "CUT"
          ],
          "x_max_fixed": 650,
          "y_max_fixed": 9000000,
          "line_styles": [
            [
              "",
              "#1f77b4"
            ],
            [
              "",
              "#ff7f0e"
            ],
            [
              "",
              "#2ca02c"
            ],
            [
              "5, 5",
              "#1f77b4"
            ],
            [
              "5, 5",
              "#ff7f0e"
            ],
            [
              "5, 5",
              "#2ca02c"
            ],
            [
              "3, 3",
              "#FF746C"
            ]
          ]
        }
      },
      {
        "text": "This is because **vaccines can move people directly from the S to the I compartment**, but **going from S to R directly is not possible in our SIR model**.",
        "image": "SIR.png"
      },
      {
        "text": "There are multiple ways to combat this, one is to add an other way to move people from one compartment to the other.\nIn this example, we added a transition called '**vaccination rate**', this could be something that **moves people from S to R depending on how many people get vaccinated in a day** and **how successfuly the vaccine protects people from getting infected**.",
        "image": "SIR_vaccination.png"
      },
      {
        "text": "If we don't want to modify our model, we still have a way to improve our results.\n**The more days we can analyse to get our transmission and recovery rate, the better the prediction becomes**.",
        "data": {
          "type": "sir_at",
          "start_index": 300,
          "include_generated": true,
          "transmission_rate": 0.0433,
          "recovery_rate": 0.0297
        },
        "vis1": {
          "type": "multiline_plot",
          "x_lab": "days",
          "y_lab": "people",
          "vert_line": 500,
          "line_labels": [
            "S_AT",
            "I_AT",
            "R_AT",
            "S_SIM",
            "I_SIM",
            "R_SIM",
            "AT_END"
          ],
          "x_max_fixed": 650,
          "y_max_fixed": 9000000,
          "line_styles": [
            [
              "",
              "#1f77b4"
            ],
            [
              "",
              "#ff7f0e"
            ],
            [
              "",
              "#2ca02c"
            ],
            [
              "5, 5",
              "#1f77b4"
            ],
            [
              "5, 5",
              "#ff7f0e"
            ],
            [
              "5, 5",
              "#2ca02c"
            ],
            [
              "3, 3",
              "#FF746C"
            ]
          ]
        }
      },
      {
        "text": "Both methods for improving our predictions have their own benefits and drawbacks. **Adding a vaccination rate to the SIR model makes it harder to fit to the real-world data** because we don't always know how effectvive a vaccine is, but if we somewhat do, we get a model that **more accurately represents the real world**.",
        "image": "SIR_vaccination.png"
      },
      {
        "text": "In contrast, when we simply use more data to improve our predictions, the **fitting itself is easier**, but **we don't always have the extra data we need**.\nFor example, if an epidemic just started, we only have a few days of data.",
        "image": "vis_mot.png"
      }
    ],
    "progress": 0
  }
]